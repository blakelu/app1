<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 整合hibernate 方式一：直接加载hibernate配置文件 -->
	<!--<bean id = "sessionFactory"
	    class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">-->
	    <!-- 加载hibernate配置文件 -->
	<!--	<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>	
	</bean> -->

	<!-- 整合hibernate 方式2:配置hibernate相关参数 -->
	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- C3P0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<bean id = "sessionFactory"
	    class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">	
		<!-- 1、配置数据库连接池 -->
		<property name="dataSource" ref = "dataSource"></property>
		<!-- hibernate常用属性-->
		<property name="hibernateProperties">
		    <props>
		        <prop key="hibernate.show_sql">true</prop>
		        <prop key="hibernate.format_sql">true</prop>
		        <prop key="hibernate.hbm2ddl.auto">update</prop>
		        <prop key="hibernate.dialect">${dialect}</prop>
		    </props>
		</property>
		<!--  引用mapping映射文件 -->
		<!-- locaotion磁盘路径 classpath: -->
		<!-- resource 类路径  不用写classpath: -->
		<property name="mappingResources">
		    <list>
		        <value>com/domain/Book.hbm.xml</value>
		        <value>com/domain/Borrow.hbm.xml</value>
		        <value>com/domain/ManagerUser.hbm.xml</value>
		        <value>com/domain/OrdinaryUser.hbm.xml</value>
		        <value>com/domain/Repertory.hbm.xml</value>
		    </list>
		</property>
	</bean>

	

	<!-- 2、配置jdbcTemplate -->
	<!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>-->
	
	<!-- 数据层 -->
	<bean id = "bookDAO" class = "com.dao.BookDAO">
	    <!-- 注入SessionFactory对象，自动构造HibernateTemplate对象 -->
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id = "managerUserDAO" class = "com.dao.ManagerUserDAO">
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- 业务层 -->
	<bean id ="bookService" class="com.service.BookService">
	    <!-- 注入DAO -->
	    <property name="bookDAO" ref="bookDAO"></property>
	</bean>
	<bean id ="managerUserService" class="com.service.ManagerUserService">
	    <!-- 注入DAO -->
	    <property name="managerUserDAO" ref="managerUserDAO"></property>
	</bean>
	
	<!-- 开启注解事务 只对当前配置文件有效 -->
  	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 事务管理 -->
	<bean id="transactionManager" 
	    class ="org.springframework.orm.hibernate3.HibernateTransactionManager">
	    <!-- 注入sessionFactory -->
	    <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	        <tx:method name="save*" propagation="REQUIRED"/>
	        <tx:method name="update*" propagation="REQUIRED"/>
	        <tx:method name="delete*" propagation="REQUIRED"/>
	        <tx:method name="find*" read-only="true"/>
	        <tx:method name="query*" read-only="true"/>
	    </tx:attributes>
	</tx:advice>
	
	<aop:config>
	    <aop:pointcut expression="within(com.service..*)" id="transactionPointcut"/>
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="transactionPointcut"/>
	</aop:config>
	
	<!-- 表现层 -->
	<bean id="bookAction" class="com.web.action.BookAction" scope="prototype">
	    <!-- 注入Service -->
	    <property name="bookService" ref="bookService"></property>
	</bean>
	<bean id="managerUserAction" class="com.web.action.ManagerUserAction" scope="prototype">
	    <!-- 注入Service -->
	    <property name="managerUserService" ref="managerUserService"></property>
	</bean>
</beans>
